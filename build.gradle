buildscript {
    repositories {
        maven { url = "https://files.minecraftforge.net/maven" }
        maven { url = "https://repo.spongepowered.org/repository/maven-public/" }
        maven { url = 'https://maven.parchmentmc.org' }
    }
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.+", changing: true
        classpath group: "org.spongepowered", name: "mixingradle", version: "0.7-SNAPSHOT"
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: "eclipse"
apply plugin: "maven-publish"
apply plugin: "org.spongepowered.mixin"

mixin {
    add sourceSets.main, "${project.modId}.refmap.json"
}

version = "${project.minecraft}-${project.modVersion}"
group = "com.doltandtio"
archivesBaseName = project.modId

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'parchment', version: '2023.09.03-1.20.1'
    runs {
        client {
            workingDirectory project.file("run")
            property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"
            property "forge.logging.console.level", "debug"
            property "mixin.env.remapRefMap", "true"
            property "mixin.env.refMapRemappingFile", "${projectDir}/build/createSrgToMcp/output.srg"
            arg "-mixin.config=" + project.modId + ".mixins.json"
            jvmArgs '--add-opens', 'java.base/jdk.internal.misc=ALL-UNNAMED',
                    '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
                    '-Dio.netty.tryReflectionSetAccessible=true'
            mods {
                foragersinsight {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file("run")
            property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"
            property "forge.logging.console.level", "debug"
            property "mixin.env.remapRefMap", "true"
            property "mixin.env.refMapRemappingFile", "${projectDir}/build/createSrgToMcp/output.srg"
            arg "-mixin.config=" + project.modId + ".mixins.json"
            jvmArgs '--add-opens', 'java.base/jdk.internal.misc=ALL-UNNAMED',
                    '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
                    '-Dio.netty.tryReflectionSetAccessible=true'
            mods {
                foragersinsight {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file("run")
            property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"
            property "forge.logging.console.level", "debug"
            property "mixin.env.remapRefMap", "true"
            property "mixin.env.refMapRemappingFile", "${projectDir}/build/createSrgToMcp/output.srg"
            property "blueprint.indev", "true"
            args "--mod", project.modId, "--all", "--output", file("src/generated/resources/"), "--existing", file("src/main/resources")
            jvmArgs '--add-opens', 'java.base/jdk.internal.misc=ALL-UNNAMED',
                    '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
                    '-Dio.netty.tryReflectionSetAccessible=true'
            mods {
                foragersinsight {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources {
    srcDir "src/generated/resources"
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.minecraft}-${project.forge}"
    implementation fg.deobf("maven.modrinth:blueprint:z4m8zvm5")
    implementation fg.deobf("maven.modrinth:farmers-delight:NcRp00OO")

    compileOnly fg.deobf("mezz.jei:jei-${project.minecraft}-common-api:${project.jei}")
    compileOnly fg.deobf("mezz.jei:jei-${project.minecraft}-forge-api:${project.jei}")
    runtimeOnly fg.deobf("mezz.jei:jei-${project.minecraft}-forge:${project.jei}")

    annotationProcessor "org.spongepowered:mixin:0.8.5:processor"
}

repositories {
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        forRepositories(fg.repository) // Only add this if you're using ForgeGradle, otherwise remove this line
        filter {
            includeGroup "maven.modrinth"
        }
    }



    maven { url "https://maven.jaackson.me" }
    maven { url "https://dvs1.progwml6.com/files/maven/" }
    maven { url "https://modmaven.k-4u.nl" }

}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.modName,
                "Specification-Vendor"    : "tiomadre",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.modName,
                "Implementation-Version"  : project.modVersion,
                "Implementation-Vendor"   : "tiomadre",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "foragersinsight.mixins.json"
        ])
    }
}